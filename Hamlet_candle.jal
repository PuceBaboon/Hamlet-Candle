
--
--   $Id: Hamlet_candle.jal,v 1.5 2014/03/26 05:37:10 anoncvs Exp $
--

--
-- Based on:-
--
--  Pete Mills' original ATTiny85, sampled candle:-
--      petemills.blogspot.com/2012/02/attiny-candle.html
--
--  Martin Harizanov's "FunkyLED_candle":-
--  http:--harizanov.com/2012/12/funky-led-candle
--
--  To verify how much of your text is incorporated into the final
--  binary, compile this program and then use this command to pull
--  out the strings:-
--
--		strings OUTPUT.cod | sed -e 's/4//g'
--


-- Specify target processor type.
include 12f683


-- Use internal oscillator at 8MHz
pragma target CLOCK	8_000_000;
pragma target OSC	INTOSC_NOCLKOUT;
pragma target WDT	disabled;
OSCCON_IRCF		= 0b_111;		-- 8MHz.

enable_digital_io();				-- Initialize all I/O pins to digital.


-- Fuses section.
pragma target OSC	INTOSC_NOCLKOUT		-- Use internal clock source, no clock-output.
pragma target WDT	DISABLED		-- Disable watchdog.
pragma target PWRTE	DISABLED		-- Disable power-up timer.
pragma target IESO	DISABLED		-- Disable two-speed start-up.
pragma target BROWNOUT	DISABLED		-- Disable brown-out detection.
pragma target MCLR	INTERNAL		-- R/C reset circuitry -not- present on -MCLR.


-- PWM setup -------
include delay;					-- JALLIB: Timer/Delay library.
include random;					-- JALLIB: Random number library.
include pwm_hardware;				-- JALLIB: PWM Library.
pwm_max_resolution(4);				-- Set to high resolution output (pre-scalar = 4).
pin_CCP1_direction	= output;
pin_A0_direction	= output;
pin_A1_direction	= output;
pin_A3_direction	= output;


--
-- Constant and variable definitions.
--
--   NOTE:- The byte constant, flicker_data[], has an internal limit of 1kB. 
--          You can add longer text, but it will be silently truncated at
--          compile time.
--
var word max_counter		= 0;
var word counter		= 0;
const byte flicker_time		= 60;		-- Display time (in ms) for each flicker state.
const byte flicker_data[]	= "To be, or not to be: that is the question: Whether 'tis nobler in the mind to suffer The slings and arrows of outrageous fortune, Or to take arms against a sea of troubles, And by opposing end them? To die: to sleep; No more; and by a sleep to say we end The heart-ache and the thousand natural shocks That flesh is heir to, 'tis a consummation Devoutly to be wish'd. To die, to sleep; To sleep: perchance to dream: ay, there's the rub; For in that sleep of death what dreams may come When we have shuffled off this mortal coil, Must give us pause: there's the respect That makes calamity of so long life; For who would bear the whips and scorns of time, The oppressor's wrong, the proud man's contumely, The pangs of despised love, the law's delay, The insolence of office and the spurns That patient merit of the unworthy takes, When he himself might his quietus make With a bare bodkin? who would fardels bear, To grunt and sweat under a weary life, But that the dread of something after death, The undiscover'd country";

--
--  Forever.  Dedication, PIC style.
--
max_counter=count(flicker_data);
forever loop
	if ((counter % random_byte()) == 0) then	
		pwm1_set_dutycycle_ratio(word(1023 - (flicker_data[counter] * 4)));	-- Change the PWM ratio to the next flicker "state".
	else
		pwm1_set_dutycycle_ratio(word(flicker_data[counter] * 4));	-- Change the PWM ratio to the next flicker "state".
	end if
									-- This only changes pin_CCP1 (where our LED is attached).

	counter = counter + 1;
	if(counter > max_counter ) then
		counter = 0;
	end if
	delay_1ms(flicker_time);					-- Delay between flicker "states".
end loop
